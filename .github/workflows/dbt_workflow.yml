# runs-on: This key tells GitHub which operating system environment to use for the workflow.
# ubuntu-latest: This refers to the latest stable version of Ubuntu Linux that GitHub provides as a virtual machine (VM) for running your workflow.

#without cache


# name: DBT Workflow

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   dbt-run:
#     runs-on: ubuntu-latest

#     steps:
#       # Checkout the repository  This action will clone your GitHub repository onto the runner, so the DBT commands can run against the latest code in your repository.
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       # Set up Python
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.9

#       # Set Environment Variables (only needed if you're passing the variable to other steps)
#       - name: Set Environment Variables
#         env:
#           DBT_PROFILES_DIR: ${{ github.workspace }}/.github/dbt_profiles
#         run: |
#           echo "DBT_PROFILES_DIR is set to $DBT_PROFILES_DIR"

#       # Install DBT
#       - name: Install DBT
#         run: |
#           python -m venv dbt-env
#           source dbt-env/bin/activate
#           pip install --upgrade pip
#           pip install dbt-core dbt-snowflake

  
name: DBT Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dbt-run:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Cache pip dependencies(Optional)
      # This step is optional but highly recommended to speed up your workflow. Caching will store your pip dependencies so they don't have to be reinstalled every time.
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            dbt-env/
          key: ${{ runner.os }}-dbt-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-dbt-

      # Set Environment Variables (ensure the DBT_PROFILES_DIR is correct)
      - name: Set Environment Variables
        env:
          DBT_PROFILES_DIR: ${{ github.workspace }}/.github/dbt_profiles  # Make sure this path is correct
        run: |
          echo "DBT_PROFILES_DIR is set to $DBT_PROFILES_DIR"

      # Install DBT
      - name: Install DBT
        run: |
          python -m venv dbt-env
          source dbt-env/bin/activate
          pip install --upgrade pip
          pip install dbt-core dbt-snowflake

      # Run DBT commands (ensure the correct profiles directory is passed)
      - name: Run DBT
        run: |
          source dbt-env/bin/activate
          dbt run --profiles-dir ${{ github.workspace }}/.github/dbt_profiles
